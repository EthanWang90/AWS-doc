flexible nosql, means you don't need to define the schema upfront
it is serverless
it can be configured to auto scale
integrate really well with lambda

Consist of:
    Tables
    Items(row)
    Attributes(column)
    support key-value and document data structures

Primary key: partition key or composite key

2 consistency models: 
    strongly consistent(cost, but immediate)
    eventually consistent(free, but may one second late)

2 index:
    local secondary index;
    global secondary index;

Scan Vs Query API Call

Provisioned throughput calculation: why do we need round-up to nearest whole number for each read or write???

DynamoDB Accellorator(DAX) only for eventually consistent read performance improvment purpose.
no suitable for strongly Consistent reads; no suitable for write-intense

DAX only support for DynamoDB and only support for write through strategy; not support for lazy loading.